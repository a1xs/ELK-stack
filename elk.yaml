---
apiVersion: v1
kind: Namespace
metadata:
  name: elk
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana
  namespace: elk
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  labels:
    app.kubernetes.io/part-of: kibana
spec:
  rules:
    - host: kibana.DOMAIN.dmz
      http:
        paths:
          - pathType: ImplementationSpecific
            path: /
            backend:
              service:
                name: kibana-kb-http
                port:
                  number: 5601
---
#### https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-volume-claim-templates.html
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: elk
spec:
  version: 8.7.0
#  image: "YOUR_REGISTRY/elasticsearch:8.7.0"
    nodeSets:
    - name: default
      count: 1
      config:
        node.store.allow_mmap: false
      podTemplate:
        spec:
          containers:
            - name: elasticsearch
              env:
                - name: ES_JAVA_OPTS
                  value: -Xms2g -Xmx2g
              resources:
                requests:
                  memory: 2Gi
                  cpu: 2
                limits:
                  memory: 4Gi
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
#            storageClassName: nfs-client
---
#### https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-kibana-advanced-configuration.html
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  namespace: elk
spec:
  version: 8.7.0
#  image: "YOUR_REGISTRY/kibana:8.7.0"
  count: 1
  podTemplate:
    spec:
      containers:
        - name: kibana
          env:
            - name: NODE_OPTIONS
              value: "--max-old-space-size=1024"
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 2Gi
              cpu: 1
  elasticsearchRef:
    name: elasticsearch
  config:
    server.publicBaseUrl: http://kibana.DOMAIN.dmz
---
#### https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-logstash-configuration.html#k8s-logstash-configuring-logstash
apiVersion: logstash.k8s.elastic.co/v1alpha1
kind: Logstash
metadata:
  name: logstash
  namespace: elk
spec:
  count: 1
  version: 8.7.0
#  image: "YOUR_REGISTRY/logstash:8.7.0"
    podTemplate:
    spec:
      containers:
        - name: logstash
          env:
            - name: LS_JAVA_OPTS
              value: "-Xmx2g -Xms2g"
          resources:
            requests:
              memory: 2Gi
              cpu: 1
            limits:
              memory: 2Gi
              cpu: 1
        - name: metricbeat
          image: "YOUR_REGISTRY/metricbeat:8.7.0"
          env:
            - name: LS_JAVA_OPTS
              value: "-Xmx1g -Xms1g"
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1Gi
              cpu: 0.5
  elasticsearchRefs:
    - clusterName: eck
      name: elasticsearch
  monitoring:
    metrics:
      elasticsearchRefs:
        - name: elasticsearch-monitoring
  pipelines:
    - pipeline.id: main
      config.string: |
        input {
          udp {
            port => 30005
            type => "udp"
          }
        }
        output {
          elasticsearch {
            hosts => [ "${ECK_ES_HOSTS}" ]
            user => "${ECK_ES_USER}"
            password => "${ECK_ES_PASSWORD}"
            cacert => "${ECK_ES_SSL_CERTIFICATE_AUTHORITY}"
          }
        }
  services:
    - name: openudp
      service:
        spec:
          type: NodePort
          ports:
            - port: 30005
              protocol: UDP
              nodePort: 30005
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch-monitoring
  namespace: elk
spec:
  version: 8.7.0
#  image: "YOUR_REGISTRY/elasticsearch:8.7.0"
    nodeSets:
    - name: default
      count: 1
      config:
        node.store.allow_mmap: false
      podTemplate:
        spec:
          containers:
            - name: elasticsearch
              env:
                - name: ES_JAVA_OPTS
                  value: -Xms2g -Xmx2g
              resources:
                requests:
                  memory: 2Gi
                  cpu: 2
                limits:
                  memory: 4Gi
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
#            storageClassName: nfs-client
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana-monitoring
  namespace: elk
spec:
  version: 8.7.0
#  image: "YOUR_REGISTRY/kibana:8.7.0"
  count: 1
    podTemplate:
    spec:
      containers:
        - name: kibana
          env:
            - name: NODE_OPTIONS
              value: "--max-old-space-size=1024"
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1.5Gi
              cpu: 1
  elasticsearchRef:
    name: elasticsearch-monitoring

